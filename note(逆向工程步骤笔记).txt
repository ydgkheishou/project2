1、mybatis的逆向工程使用步骤：
    a. 导入jar包 mybatis-generator-core-1.3.2.jar

    b. 配置一个配置文件
        配置文件存放的位置必须在当前module的根目录或者是当前工程的根目录，注意不是类路径
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE generatorConfiguration
          PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
          "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

        <generatorConfiguration>
          <classPathEntry location="/Program Files/IBM/SQLLIB/java/db2java.zip" />

          <context id="DB2Tables" targetRuntime="MyBatis3">
            <jdbcConnection driverClass="COM.ibm.db2.jdbc.app.DB2Driver"
                connectionURL="jdbc:db2:TEST"
                userId="db2admin"
                password="db2admin">
            </jdbcConnection>

            <javaTypeResolver >
              <property name="forceBigDecimals" value="false" />
            </javaTypeResolver>

            <javaModelGenerator targetPackage="test.model" targetProject="\MBGTestProject\src">
              <property name="enableSubPackages" value="true" />
              <property name="trimStrings" value="true" />
            </javaModelGenerator>

            <sqlMapGenerator targetPackage="test.xml"  targetProject="\MBGTestProject\src">
              <property name="enableSubPackages" value="true" />
            </sqlMapGenerator>

            <javaClientGenerator type="XMLMAPPER" targetPackage="test.dao"  targetProject="\MBGTestProject\src">
              <property name="enableSubPackages" value="true" />
            </javaClientGenerator>

            <table schema="DB2ADMIN" tableName="ALLTYPES" domainObjectName="Customer" >
              <property name="useActualColumnNames" value="true"/>
              <generatedKey column="ID" sqlStatement="DB2" identity="true" />
              <columnOverride column="DATE_FIELD" property="startDate" />
              <ignoreColumn column="FRED" />
              <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />
            </table>

          </context>
        </generatorConfiguration>
    c. 编写运行配置文件的测试类
           List<String> warnings = new ArrayList<String>();
           boolean overwrite = true;
           File configFile = new File("generatorConfig.xml");
           ConfigurationParser cp = new ConfigurationParser(warnings);
           Configuration config = cp.parseConfiguration(configFile);
           DefaultShellCallback callback = new DefaultShellCallback(overwrite);
           MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config, callback, warnings);
           myBatisGenerator.generate(null);









mybatis中定义了一些内置的参数，这些参数可以在OGNL表达式中取出比如
    _parameter : 表示传入的参数
    _databaseId : 数据库厂商的表示